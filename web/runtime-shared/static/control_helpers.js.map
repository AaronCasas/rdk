{"version":3,"sources":["webpack://rdk-web/./src/rc/control_helpers.js"],"names":["window","BaseControlHelper","moveStraight","name","distance_mm","speed_mm_s","cb","req","baseApi","MoveStraightRequest","setName","setMmPerSec","setDistanceMm","rcLogConditionally","baseService","spin","angle_deg","speed_deg_s","SpinRequest","setAngleDeg","setDegsPerSec","setPower","linearVector","angularVector","SetPowerRequest","setLinear","setAngular","computeKeyboardBaseControls","keysPressed","linear","angular","forward","backward","right","left"],"mappings":"AAGAA,OAAOC,kBAAoB,CACzBC,aAAc,SAASC,EAAMC,EAAaC,EAAYC,GACpD,MAAMC,EAAM,IAAIC,QAAQC,oBACxBF,EAAIG,QAAQP,GACZI,EAAII,YAAYN,GAChBE,EAAIK,cAAcR,GAElBS,mBAAmBN,GACnBO,YAAYZ,aAAaK,EAAK,GAAID,IAGpCS,KAAM,SAASZ,EAAMa,EAAWC,EAAaX,GAC3C,MAAMC,EAAM,IAAIC,QAAQU,YACxBX,EAAIG,QAAQP,GACZI,EAAIY,YAAYH,GAChBT,EAAIa,cAAcH,GAElBJ,mBAAmBN,GACnBO,YAAYC,KAAKR,EAAK,GAAID,IAG5Be,SAAU,SAASlB,EAAMmB,EAAcC,EAAejB,GAClD,MAAMC,EAAM,IAAIC,QAAQgB,gBACxBjB,EAAIG,QAAQP,GACZI,EAAIkB,UAAUH,GACdf,EAAImB,WAAWH,GAEfV,mBAAmBN,GACnBO,YAAYO,SAASd,EAAK,GAAID,KASpCN,OAAO2B,4BAA8B,SAASC,GAC1C,IAAIC,EAAS,EACTC,EAAU,EAcd,OAZIF,EAAYG,QACZF,EAAS,EACFD,EAAYI,WACnBH,GAAU,GAGVD,EAAYK,MACZH,GAAW,EACJF,EAAYM,OACnBJ,EAAU,GAGP,CAACD,SAAQC","file":"control_helpers.js","sourcesContent":["/*\nSimple base control helpers. Should be replaced by a proper SDK once available.\n*/\nwindow.BaseControlHelper = {\n  moveStraight: function(name, distance_mm, speed_mm_s, cb) {\n    const req = new baseApi.MoveStraightRequest();\n    req.setName(name);\n    req.setMmPerSec(speed_mm_s);\n    req.setDistanceMm(distance_mm);\n\n    rcLogConditionally(req);\n    baseService.moveStraight(req, {}, cb);\n  },\n\n  spin: function(name, angle_deg, speed_deg_s, cb) {\n    const req = new baseApi.SpinRequest();\n    req.setName(name);\n    req.setAngleDeg(angle_deg);\n    req.setDegsPerSec(speed_deg_s);\n\n    rcLogConditionally(req);\n    baseService.spin(req, {}, cb);\n  },\n\n  setPower: function(name, linearVector, angularVector, cb) {\n      const req = new baseApi.SetPowerRequest();\n      req.setName(name);\n      req.setLinear(linearVector);\n      req.setAngular(angularVector);\n\n      rcLogConditionally(req);\n      baseService.setPower(req, {}, cb);\n  },\n\n};\n\n/*\n  Input: State of keys. e.g. {straight : true, backward : false, right : false, left: false}\n  Output: linearY and angularZ throttle\n*/\nwindow.computeKeyboardBaseControls = function(keysPressed) {\n    let linear = 0;\n    let angular = 0;\n\n    if (keysPressed.forward) {\n        linear = 1;\n    } else if (keysPressed.backward) {\n        linear = -1;\n    } \n    \n    if (keysPressed.right) {\n        angular = -1;\n    } else if (keysPressed.left) {\n        angular = 1;\n    } \n    \n    return {linear, angular};\n};\n\n"],"sourceRoot":""}