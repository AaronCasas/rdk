syntax = "proto3";
option go_package = "go.viam.com/robotcore/proto/lidar/v1";

package proto.lidar.v1;

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";

message Measurement  {
	double angle = 1;
	double angle_deg = 2;
	double distance = 3;
	double x = 4;
	double y = 5;
}

message InfoRequest {}

message InfoResponse {
	google.protobuf.Struct info = 1;
}

message StartRequest {}

message StartResponse {}

message StopRequest {}

message StopResponse {}

message CloseRequest {}

message CloseResponse {}

message ScanRequest {
	int32 count = 1;
	bool no_filter = 2;
}

message ScanResponse {
	repeated Measurement measurements = 1;
}

message RangeRequest {}

message RangeResponse {
	int64 range = 1;
}

message BoundsRequest {}

message BoundsResponse {
	int64 x = 1;
	int64 y = 2;
}

message AngularResolutionRequest {}

message AngularResolutionResponse {
	double angular_resolution = 1;
}

service LidarService {
	rpc Info(InfoRequest) returns (InfoResponse) {
	    option (google.api.http) = {
			get: "/v1/info"
		};
	}
	rpc Start(StartRequest) returns (StartResponse) {
		option (google.api.http) = {
			post: "/v1/start"
		};
	}
	rpc Stop(StopRequest) returns (StopResponse) {
		option (google.api.http) = {
			post: "/v1/stop"
		};
	}
	rpc Scan(ScanRequest) returns (ScanResponse) {
		option (google.api.http) = {
			post: "/v1/scan"
		};
	}
	rpc Range(RangeRequest) returns (RangeResponse) {
		option (google.api.http) = {
			get: "/v1/range"
		};
	}
	rpc Bounds(BoundsRequest) returns (BoundsResponse) {
		option (google.api.http) = {
			get: "/v1/bounds"
		};
	}
	rpc AngularResolution(AngularResolutionRequest) returns (AngularResolutionResponse) {
		option (google.api.http) = {
			get: "/v1/angular_resolution"
		};
	}
}
