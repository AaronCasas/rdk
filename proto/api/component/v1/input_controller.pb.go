// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: proto/api/component/v1/input_controller.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InputControllerServiceGetControlsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of an input controller
	Controller string `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
}

func (x *InputControllerServiceGetControlsRequest) Reset() {
	*x = InputControllerServiceGetControlsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputControllerServiceGetControlsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputControllerServiceGetControlsRequest) ProtoMessage() {}

func (x *InputControllerServiceGetControlsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputControllerServiceGetControlsRequest.ProtoReflect.Descriptor instead.
func (*InputControllerServiceGetControlsRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_component_v1_input_controller_proto_rawDescGZIP(), []int{0}
}

func (x *InputControllerServiceGetControlsRequest) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

type InputControllerServiceGetControlsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns a list of all the controls (buttons and axes) that are
	// available to a given Input Controller
	Controls []string `protobuf:"bytes,1,rep,name=controls,proto3" json:"controls,omitempty"`
}

func (x *InputControllerServiceGetControlsResponse) Reset() {
	*x = InputControllerServiceGetControlsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputControllerServiceGetControlsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputControllerServiceGetControlsResponse) ProtoMessage() {}

func (x *InputControllerServiceGetControlsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputControllerServiceGetControlsResponse.ProtoReflect.Descriptor instead.
func (*InputControllerServiceGetControlsResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_component_v1_input_controller_proto_rawDescGZIP(), []int{1}
}

func (x *InputControllerServiceGetControlsResponse) GetControls() []string {
	if x != nil {
		return x.Controls
	}
	return nil
}

type InputControllerServiceGetEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of an input controller
	Controller string `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
}

func (x *InputControllerServiceGetEventsRequest) Reset() {
	*x = InputControllerServiceGetEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputControllerServiceGetEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputControllerServiceGetEventsRequest) ProtoMessage() {}

func (x *InputControllerServiceGetEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputControllerServiceGetEventsRequest.ProtoReflect.Descriptor instead.
func (*InputControllerServiceGetEventsRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_component_v1_input_controller_proto_rawDescGZIP(), []int{2}
}

func (x *InputControllerServiceGetEventsRequest) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

type InputControllerServiceGetEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns a list of the most recent event for each control on a given InputController. Effectively provides the current "state" of all
	// buttons/axes on a given input controller
	Events []*InputControllerServiceEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *InputControllerServiceGetEventsResponse) Reset() {
	*x = InputControllerServiceGetEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputControllerServiceGetEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputControllerServiceGetEventsResponse) ProtoMessage() {}

func (x *InputControllerServiceGetEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputControllerServiceGetEventsResponse.ProtoReflect.Descriptor instead.
func (*InputControllerServiceGetEventsResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_component_v1_input_controller_proto_rawDescGZIP(), []int{3}
}

func (x *InputControllerServiceGetEventsResponse) GetEvents() []*InputControllerServiceEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type InputControllerServiceTriggerEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of an input controller
	Controller string `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
	// Digitally assert a given event
	Event *InputControllerServiceEvent `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *InputControllerServiceTriggerEventRequest) Reset() {
	*x = InputControllerServiceTriggerEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputControllerServiceTriggerEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputControllerServiceTriggerEventRequest) ProtoMessage() {}

func (x *InputControllerServiceTriggerEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputControllerServiceTriggerEventRequest.ProtoReflect.Descriptor instead.
func (*InputControllerServiceTriggerEventRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_component_v1_input_controller_proto_rawDescGZIP(), []int{4}
}

func (x *InputControllerServiceTriggerEventRequest) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *InputControllerServiceTriggerEventRequest) GetEvent() *InputControllerServiceEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type InputControllerServiceTriggerEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InputControllerServiceTriggerEventResponse) Reset() {
	*x = InputControllerServiceTriggerEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputControllerServiceTriggerEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputControllerServiceTriggerEventResponse) ProtoMessage() {}

func (x *InputControllerServiceTriggerEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputControllerServiceTriggerEventResponse.ProtoReflect.Descriptor instead.
func (*InputControllerServiceTriggerEventResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_component_v1_input_controller_proto_rawDescGZIP(), []int{5}
}

type InputControllerServiceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp of event
	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	// An event type (eg: ButtonPress, ButtonRelease)
	Event string `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	// A control, can be a button (eg: ButtonSouth) or an axis (eg: AbsoluteX)
	Control string `protobuf:"bytes,3,opt,name=control,proto3" json:"control,omitempty"`
	// 0 or 1 for buttons, -1.0 to +1.0 for axes
	Value float64 `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *InputControllerServiceEvent) Reset() {
	*x = InputControllerServiceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputControllerServiceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputControllerServiceEvent) ProtoMessage() {}

func (x *InputControllerServiceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputControllerServiceEvent.ProtoReflect.Descriptor instead.
func (*InputControllerServiceEvent) Descriptor() ([]byte, []int) {
	return file_proto_api_component_v1_input_controller_proto_rawDescGZIP(), []int{6}
}

func (x *InputControllerServiceEvent) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *InputControllerServiceEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *InputControllerServiceEvent) GetControl() string {
	if x != nil {
		return x.Control
	}
	return ""
}

func (x *InputControllerServiceEvent) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type InputControllerServiceStreamEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of an input controller
	Controller string `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
	// A list of Events
	Events []*InputControllerServiceStreamEventsRequest_Events `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *InputControllerServiceStreamEventsRequest) Reset() {
	*x = InputControllerServiceStreamEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputControllerServiceStreamEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputControllerServiceStreamEventsRequest) ProtoMessage() {}

func (x *InputControllerServiceStreamEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputControllerServiceStreamEventsRequest.ProtoReflect.Descriptor instead.
func (*InputControllerServiceStreamEventsRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_component_v1_input_controller_proto_rawDescGZIP(), []int{7}
}

func (x *InputControllerServiceStreamEventsRequest) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *InputControllerServiceStreamEventsRequest) GetEvents() []*InputControllerServiceStreamEventsRequest_Events {
	if x != nil {
		return x.Events
	}
	return nil
}

type InputControllerServiceStreamEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Event for a controller
	Event *InputControllerServiceEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *InputControllerServiceStreamEventsResponse) Reset() {
	*x = InputControllerServiceStreamEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputControllerServiceStreamEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputControllerServiceStreamEventsResponse) ProtoMessage() {}

func (x *InputControllerServiceStreamEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputControllerServiceStreamEventsResponse.ProtoReflect.Descriptor instead.
func (*InputControllerServiceStreamEventsResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_component_v1_input_controller_proto_rawDescGZIP(), []int{8}
}

func (x *InputControllerServiceStreamEventsResponse) GetEvent() *InputControllerServiceEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type InputControllerServiceStreamEventsRequest_Events struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of a control (button or axis)
	Control string `protobuf:"bytes,1,opt,name=control,proto3" json:"control,omitempty"`
	// Specify which event types to recieve events for
	// To Do (FA): Right now this can be an empty list, but we should error in this case as opening a stream with no messages is expensive
	Events []string `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	// Specify which event types to stop recieving events for
	// This can be an empty list
	CancelledEvents []string `protobuf:"bytes,3,rep,name=cancelled_events,json=cancelledEvents,proto3" json:"cancelled_events,omitempty"`
}

func (x *InputControllerServiceStreamEventsRequest_Events) Reset() {
	*x = InputControllerServiceStreamEventsRequest_Events{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputControllerServiceStreamEventsRequest_Events) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputControllerServiceStreamEventsRequest_Events) ProtoMessage() {}

func (x *InputControllerServiceStreamEventsRequest_Events) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_component_v1_input_controller_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputControllerServiceStreamEventsRequest_Events.ProtoReflect.Descriptor instead.
func (*InputControllerServiceStreamEventsRequest_Events) Descriptor() ([]byte, []int) {
	return file_proto_api_component_v1_input_controller_proto_rawDescGZIP(), []int{7, 0}
}

func (x *InputControllerServiceStreamEventsRequest_Events) GetControl() string {
	if x != nil {
		return x.Control
	}
	return ""
}

func (x *InputControllerServiceStreamEventsRequest_Events) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *InputControllerServiceStreamEventsRequest_Events) GetCancelledEvents() []string {
	if x != nil {
		return x.CancelledEvents
	}
	return nil
}

var File_proto_api_component_v1_input_controller_proto protoreflect.FileDescriptor

var file_proto_api_component_v1_input_controller_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x28, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x22, 0x47, 0x0a, 0x29, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x22, 0x48, 0x0a, 0x26, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x76, 0x0a, 0x27, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x96, 0x01,
	0x0a, 0x29, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x2a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x1b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x94, 0x02, 0x0a, 0x29, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x65, 0x0a, 0x06, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x6c, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x77, 0x0a, 0x2a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x32, 0xd5, 0x06, 0x0a, 0x16, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xc9, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x73, 0x12, 0x40, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2f, 0x7b, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x7d, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x73, 0x12, 0xc6, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x3e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x2f, 0x7b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x7d, 0x2f, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xd2, 0x01, 0x0a, 0x0c, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x41, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x31, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x2f, 0x7b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x7d,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x30, 0x01, 0x12,
	0xd0, 0x01, 0x0a, 0x0c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22,
	0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2f, 0x7b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x7d, 0x2f, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x42, 0x4d, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x72,
	0x64, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x5a, 0x26, 0x67, 0x6f, 0x2e, 0x76, 0x69,
	0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_api_component_v1_input_controller_proto_rawDescOnce sync.Once
	file_proto_api_component_v1_input_controller_proto_rawDescData = file_proto_api_component_v1_input_controller_proto_rawDesc
)

func file_proto_api_component_v1_input_controller_proto_rawDescGZIP() []byte {
	file_proto_api_component_v1_input_controller_proto_rawDescOnce.Do(func() {
		file_proto_api_component_v1_input_controller_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_api_component_v1_input_controller_proto_rawDescData)
	})
	return file_proto_api_component_v1_input_controller_proto_rawDescData
}

var file_proto_api_component_v1_input_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_api_component_v1_input_controller_proto_goTypes = []interface{}{
	(*InputControllerServiceGetControlsRequest)(nil),         // 0: proto.api.component.v1.InputControllerServiceGetControlsRequest
	(*InputControllerServiceGetControlsResponse)(nil),        // 1: proto.api.component.v1.InputControllerServiceGetControlsResponse
	(*InputControllerServiceGetEventsRequest)(nil),           // 2: proto.api.component.v1.InputControllerServiceGetEventsRequest
	(*InputControllerServiceGetEventsResponse)(nil),          // 3: proto.api.component.v1.InputControllerServiceGetEventsResponse
	(*InputControllerServiceTriggerEventRequest)(nil),        // 4: proto.api.component.v1.InputControllerServiceTriggerEventRequest
	(*InputControllerServiceTriggerEventResponse)(nil),       // 5: proto.api.component.v1.InputControllerServiceTriggerEventResponse
	(*InputControllerServiceEvent)(nil),                      // 6: proto.api.component.v1.InputControllerServiceEvent
	(*InputControllerServiceStreamEventsRequest)(nil),        // 7: proto.api.component.v1.InputControllerServiceStreamEventsRequest
	(*InputControllerServiceStreamEventsResponse)(nil),       // 8: proto.api.component.v1.InputControllerServiceStreamEventsResponse
	(*InputControllerServiceStreamEventsRequest_Events)(nil), // 9: proto.api.component.v1.InputControllerServiceStreamEventsRequest.Events
	(*timestamppb.Timestamp)(nil),                            // 10: google.protobuf.Timestamp
}
var file_proto_api_component_v1_input_controller_proto_depIdxs = []int32{
	6,  // 0: proto.api.component.v1.InputControllerServiceGetEventsResponse.events:type_name -> proto.api.component.v1.InputControllerServiceEvent
	6,  // 1: proto.api.component.v1.InputControllerServiceTriggerEventRequest.event:type_name -> proto.api.component.v1.InputControllerServiceEvent
	10, // 2: proto.api.component.v1.InputControllerServiceEvent.time:type_name -> google.protobuf.Timestamp
	9,  // 3: proto.api.component.v1.InputControllerServiceStreamEventsRequest.events:type_name -> proto.api.component.v1.InputControllerServiceStreamEventsRequest.Events
	6,  // 4: proto.api.component.v1.InputControllerServiceStreamEventsResponse.event:type_name -> proto.api.component.v1.InputControllerServiceEvent
	0,  // 5: proto.api.component.v1.InputControllerService.GetControls:input_type -> proto.api.component.v1.InputControllerServiceGetControlsRequest
	2,  // 6: proto.api.component.v1.InputControllerService.GetEvents:input_type -> proto.api.component.v1.InputControllerServiceGetEventsRequest
	7,  // 7: proto.api.component.v1.InputControllerService.StreamEvents:input_type -> proto.api.component.v1.InputControllerServiceStreamEventsRequest
	4,  // 8: proto.api.component.v1.InputControllerService.TriggerEvent:input_type -> proto.api.component.v1.InputControllerServiceTriggerEventRequest
	1,  // 9: proto.api.component.v1.InputControllerService.GetControls:output_type -> proto.api.component.v1.InputControllerServiceGetControlsResponse
	3,  // 10: proto.api.component.v1.InputControllerService.GetEvents:output_type -> proto.api.component.v1.InputControllerServiceGetEventsResponse
	8,  // 11: proto.api.component.v1.InputControllerService.StreamEvents:output_type -> proto.api.component.v1.InputControllerServiceStreamEventsResponse
	5,  // 12: proto.api.component.v1.InputControllerService.TriggerEvent:output_type -> proto.api.component.v1.InputControllerServiceTriggerEventResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_api_component_v1_input_controller_proto_init() }
func file_proto_api_component_v1_input_controller_proto_init() {
	if File_proto_api_component_v1_input_controller_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_api_component_v1_input_controller_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputControllerServiceGetControlsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_component_v1_input_controller_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputControllerServiceGetControlsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_component_v1_input_controller_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputControllerServiceGetEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_component_v1_input_controller_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputControllerServiceGetEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_component_v1_input_controller_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputControllerServiceTriggerEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_component_v1_input_controller_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputControllerServiceTriggerEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_component_v1_input_controller_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputControllerServiceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_component_v1_input_controller_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputControllerServiceStreamEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_component_v1_input_controller_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputControllerServiceStreamEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_component_v1_input_controller_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputControllerServiceStreamEventsRequest_Events); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_api_component_v1_input_controller_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_api_component_v1_input_controller_proto_goTypes,
		DependencyIndexes: file_proto_api_component_v1_input_controller_proto_depIdxs,
		MessageInfos:      file_proto_api_component_v1_input_controller_proto_msgTypes,
	}.Build()
	File_proto_api_component_v1_input_controller_proto = out.File
	file_proto_api_component_v1_input_controller_proto_rawDesc = nil
	file_proto_api_component_v1_input_controller_proto_goTypes = nil
	file_proto_api_component_v1_input_controller_proto_depIdxs = nil
}
