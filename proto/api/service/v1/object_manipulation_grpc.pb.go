// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ObjectManipulationServiceClient is the client API for ObjectManipulationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ObjectManipulationServiceClient interface {
	DoGrab(ctx context.Context, in *ObjectManipulationServiceDoGrabRequest, opts ...grpc.CallOption) (*ObjectManipulationServiceDoGrabResponse, error)
}

type objectManipulationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewObjectManipulationServiceClient(cc grpc.ClientConnInterface) ObjectManipulationServiceClient {
	return &objectManipulationServiceClient{cc}
}

func (c *objectManipulationServiceClient) DoGrab(ctx context.Context, in *ObjectManipulationServiceDoGrabRequest, opts ...grpc.CallOption) (*ObjectManipulationServiceDoGrabResponse, error) {
	out := new(ObjectManipulationServiceDoGrabResponse)
	err := c.cc.Invoke(ctx, "/proto.api.service.v1.ObjectManipulationService/DoGrab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ObjectManipulationServiceServer is the server API for ObjectManipulationService service.
// All implementations must embed UnimplementedObjectManipulationServiceServer
// for forward compatibility
type ObjectManipulationServiceServer interface {
	DoGrab(context.Context, *ObjectManipulationServiceDoGrabRequest) (*ObjectManipulationServiceDoGrabResponse, error)
	mustEmbedUnimplementedObjectManipulationServiceServer()
}

// UnimplementedObjectManipulationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedObjectManipulationServiceServer struct {
}

func (UnimplementedObjectManipulationServiceServer) DoGrab(context.Context, *ObjectManipulationServiceDoGrabRequest) (*ObjectManipulationServiceDoGrabResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoGrab not implemented")
}
func (UnimplementedObjectManipulationServiceServer) mustEmbedUnimplementedObjectManipulationServiceServer() {
}

// UnsafeObjectManipulationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ObjectManipulationServiceServer will
// result in compilation errors.
type UnsafeObjectManipulationServiceServer interface {
	mustEmbedUnimplementedObjectManipulationServiceServer()
}

func RegisterObjectManipulationServiceServer(s grpc.ServiceRegistrar, srv ObjectManipulationServiceServer) {
	s.RegisterService(&ObjectManipulationService_ServiceDesc, srv)
}

func _ObjectManipulationService_DoGrab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectManipulationServiceDoGrabRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ObjectManipulationServiceServer).DoGrab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.api.service.v1.ObjectManipulationService/DoGrab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ObjectManipulationServiceServer).DoGrab(ctx, req.(*ObjectManipulationServiceDoGrabRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ObjectManipulationService_ServiceDesc is the grpc.ServiceDesc for ObjectManipulationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ObjectManipulationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.api.service.v1.ObjectManipulationService",
	HandlerType: (*ObjectManipulationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoGrab",
			Handler:    _ObjectManipulationService_DoGrab_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/api/service/v1/object_manipulation.proto",
}
